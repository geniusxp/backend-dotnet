// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using geniusxp_backend_dotnet.Data;

#nullable disable

namespace geniusxp_backend_dotnet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_event");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("tx_description");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_event_type");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("url_image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("nm_event");

                    b.HasKey("Id");

                    b.ToTable("TB_GXP_EVENT");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.EventDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_event_day");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_end");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_start");

                    b.Property<string>("TransmissionUrl")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("url_transmission");

                    b.Property<int>("id_event")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("id_event");

                    b.ToTable("TB_GXP_EVENT_DAY");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_ticket");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_issued");

                    b.Property<DateTime?>("DateOfUse")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_use");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("nr_ticket");

                    b.Property<int>("id_ticket_type")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("id_user")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("TicketNumber")
                        .IsUnique();

                    b.HasIndex("id_ticket_type");

                    b.HasIndex("id_user");

                    b.ToTable("TB_GXP_TICKET");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_ticket_type");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("nr_quantity");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("tx_description");

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("dt_finished_at");

                    b.Property<float>("Price")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("vl_price");

                    b.Property<int>("QuantitySold")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("nr_sold");

                    b.Property<int>("id_event")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("id_event");

                    b.ToTable("TB_GXP_TICKET_TYPE");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_user");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("url_avatar");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("nr_cpf");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("dt_birth");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("tx_description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("ds_email");

                    b.Property<string>("Interests")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("tx_interests");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ds_password");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TB_GXP_USER");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.EventDay", b =>
                {
                    b.HasOne("geniusxp_backend_dotnet.Models.Event", "Event")
                        .WithMany("Days")
                        .HasForeignKey("id_event")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.Ticket", b =>
                {
                    b.HasOne("geniusxp_backend_dotnet.Models.TicketType", "TicketType")
                        .WithMany("Tickets")
                        .HasForeignKey("id_ticket_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("geniusxp_backend_dotnet.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.TicketType", b =>
                {
                    b.HasOne("geniusxp_backend_dotnet.Models.Event", "Event")
                        .WithMany("TicketTypes")
                        .HasForeignKey("id_event")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.Event", b =>
                {
                    b.Navigation("Days");

                    b.Navigation("TicketTypes");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.TicketType", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("geniusxp_backend_dotnet.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
